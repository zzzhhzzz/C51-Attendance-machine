C51 COMPILER V9.59.0.0   MAIN                                                              03/19/2021 15:06:53 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN D:\main.obj
COMPILER INVOKED BY: D:\DPJ\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) DEBUG OBJECTEXTEND TABS(2) OBJECT(D:\main.obj)

line level    source

   1          /*************************************************************
   2                                   智能云考勤机指纹密码锁部分
   3                                   
   4          完成情况：指纹解锁和密码解锁完成，人脸识别部分还在进行
   5                    在自学和别人的帮助下完成了一个简单pcb板的设计和焊接，实现了指纹密码部分的功能
   6          
   7          
   8          部件部分说明：由于单独实现指纹密码部分功能对单片机的性能要求不高，也为了方便代码在面包板上进
   9                        行简单调试，故采用了一开始学习所用的stc12c5a16s2单片机。（由于最终在pcb上使用的是
  10                        89c52，故最终程序所采用的时序根据c52和16s2的速度不同而做出了调整）
  11          
  12                        抬杆系统改用继电器hk4100f跟电磁锁
  13            
  14                        存储芯片采用的AT24C02
  15                        
  16                        键盘采用了4*4的独立按键，考虑到4*4功能够用且正好使用8个接口更加方便，故并未采用4*5排键
  17                                
  18          
  19          应用视频已经完成（放在了压缩包里），但最终放到b站上的视频还在制作过程中，会尽快完成并上传！
  20          
  21          ***************************************************************/
  22          #include<reg52.h>     //头文件
  23          #include<LCD12864.h>
  24          #include<AT24C02.h>
  25          #include<KEY.h>
  26          #include<AS608.h>
  27          #include<T2.h>
  28          
  29          #define uchar unsigned char //宏定义
  30          #define uint unsigned int
  31          #define ulong unsigned long
  32          
  33          /************************引脚定义************************/
  34          sbit buzz=P3^7; //蜂鸣器
  35          sbit led=P0^0;  //LED灯
  36          
  37          /************************变量定义************************/
  38          #define MAX 20   //指纹最大数量
  39          #define ID_MAX 3 //输入ID最大位数
  40          
  41          uchar mode=0;    //0正常解锁，1管理界面，2录入指纹模式，3删除指纹模式，4修改密码
  42          
  43          uchar mode_num=0;//管理界面选择项
  44          
  45          uint ID=0;     //存储输入编号ID
  46          uchar n=0;       //输入的位数
  47          bit zhiwen_f=0;  //1=标记进入指纹采集
  48          
  49          uchar a;     //存储按键值    
  50          uchar num;     //记录输入的密码位数
  51          bit   in_f;    //输入密码的标志
  52          bit   reset_f;   //重设密码的标志
  53          bit   input_f;   //六位密码输完的标志
  54          uchar reset_num; //标记修改密码阶段，=1输入旧密码，=2输入新密码，=3再次输入新密码
  55          
C51 COMPILER V9.59.0.0   MAIN                                                              03/19/2021 15:06:53 PAGE 2   

  56          ulong low_mima=0;//系统密码
  57          ulong in_mima=0; //暂存输入的密码
  58          ulong new_mima=0;//暂存输入新密码
  59          
  60          uchar temp[5]="    \0";//存储显示内容  
  61          /********************************************************
  62          函数void delayms(uint ms)
  63          毫秒延时函数
  64          ********************************************************/ 
  65          void delayms(uint ms)
  66          {
  67   1        unsigned char i=100,j;
  68   1        for(;ms;ms--)
  69   1        {
  70   2          while(--i)
  71   2          {
  72   3            j=10;
  73   3            while(--j);
  74   3          }
  75   2        }
  76   1      }
  77          /********************************************************
  78          函数void didi(uchar i)
  79          蜂鸣器鸣叫
  80          i为鸣叫次数
  81          ********************************************************/ 
  82          void didi(uchar i)
  83          {
  84   1        uchar j;
  85   1        for(j=0;j<i;j++)//循环i次，LED、蜂鸣器鸣叫几次
  86   1        {
  87   2          led=0;    //开启LED、蜂鸣器
  88   2          buzz=0;
  89   2          delayms(20);
  90   2          led=1;    //关闭LED、蜂鸣器
  91   2          buzz=1;
  92   2          delayms(15);
  93   2        }
  94   1      }
  95          /********************************************************
  96          函数void diaplay_mode0()
  97          显示密码锁主界面
  98          ********************************************************/
  99          void diaplay_mode0()
 100          {
 101   1        LCD12864_display_string(1,1,"指纹密码锁");
 102   1        LCD12864_display_string(0,2,"编号: ");  
 103   1        LCD12864_display_string(0,3,"状态: ");
 104   1      }
 105          /********************************************************
 106          函数void xunzhiwen()
 107          查找指纹
 108          ********************************************************/
 109          void xunzhiwen()
 110          {
 111   1        searchnum=search(); //搜索指纹
 112   1        if((searchnum>=1&&searchnum<=MAX)||searchnum==255)//最多MAX个指纹
 113   1        {   
 114   2          if(searchnum>=1&&searchnum<=MAX)      //指纹识别成功
 115   2          {
 116   3            temp[0]=searchnum%1000/100+0x30;
 117   3            temp[1]=searchnum%100/10+0x30;
C51 COMPILER V9.59.0.0   MAIN                                                              03/19/2021 15:06:53 PAGE 3   

 118   3            temp[2]=searchnum%10+0x30;
 119   3            temp[3]=' ';
 120   3            LCD12864_display_string(3,2,temp);//显示指纹编号
 121   3            LCD12864_display_string(3,3,"指纹解锁");
 122   3            LCD12864_display_string(1,4,"            ");
 123   3            in_mima=0;              //清除以输入的密码
 124   3            num=0;                //清除以输入的密码位数
 125   3            input_f=0;              //清除输入密码标志
 126   3            jdq=0;                //继电器吸合，打开电磁锁
 127   3            T2_num=0;             //开启重新开始计时
 128   3            TR2=1;
 129   3          }
 130   2          else                                  //不正确的指纹
 131   2          {
 132   3            LCD12864_display_string(3,3,"无效指纹");
 133   3            didi(3);              //报警三次
 134   3          }
 135   2          delay1ms(500);              //延时后自动清除显示内容
 136   2          LCD12864_display_string(3,2,"    ");
 137   2          LCD12864_display_string(3,3,"        ");
 138   2        }                     
 139   1      }
 140          
 141          /********************************************************
 142          函数void cunchu()
 143          存储指纹
 144          ********************************************************/
 145          void cunchu()
 146          {
 147   1        LCD12864_display_string(0,3,"状态: ");
 148   1      
 149   1        if(ID>0&&ID<=MAX)  //输入的存储指纹位置正确
 150   1        {
 151   2          if(enroll()==1)//采集两次，生成1个指纹模板成功
 152   2          {
 153   3            if(savefingure(ID)==1)//保存指纹成功
 154   3            {
 155   4              LCD12864_display_string(3,3,"录入成功");
 156   4            } 
 157   3            else          //保存指纹失败
 158   3              LCD12864_display_string(3,3,"存储失败");  
 159   3          }
 160   2          else                  //采集指纹失败
 161   2            LCD12864_display_string(3,3,"采集失败");  
 162   2        }
 163   1        else                    //输入指纹编号错误
 164   1          LCD12864_display_string(3,3,"编号错误");
 165   1      
 166   1        n=0;     //清除输入编号位数
 167   1        ID=0;    //清除输入编号
 168   1        zhiwen_f=0;//关闭指纹采集
 169   1      }
 170          /********************************************************
 171          函数void shanchu()
 172          删除指纹
 173          ********************************************************/
 174          void shanchu()
 175          {
 176   1        LCD12864_display_string(0,3,"状态: ");
 177   1        if(ID>0&&ID<=MAX)     //输入的存储指纹位置正确
 178   1        {
 179   2          if(dellfingure(ID)==1)//删除指纹成功
C51 COMPILER V9.59.0.0   MAIN                                                              03/19/2021 15:06:53 PAGE 4   

 180   2          {
 181   3            LCD12864_display_string(3,3,"删除成功");
 182   3          }
 183   2          else          //删除指纹失败
 184   2            LCD12864_display_string(3,3,"删除失败");  
 185   2        }
 186   1        else
 187   1        {
 188   2          if(ID==999)       //如果输入的是999表示清空指纹
 189   2          {
 190   3            if(Clear_All()==1)//清空指纹成功
 191   3              LCD12864_display_string(3,3,"清空指纹");
 192   3            else        //清空指纹失败
 193   3              LCD12864_display_string(3,3,"清空失败");  
 194   3          }
 195   2          else          //输入的是其它错误编号
 196   2            LCD12864_display_string(3,3,"编号错误");
 197   2        }
 198   1          
 199   1        n=0;     //清除输入编号位数
 200   1        ID=0;    //清除输入编号
 201   1        zhiwen_f=0;//关闭指纹采集                 
 202   1      }
 203          
 204          /********************************************************
 205          函void display_guanli()
 206          显示管理界面
 207          ********************************************************/
 208          void display_guanli()
 209          {
 210   1        LCD12864_display_string(0,1,"  管理系统界面  ");
 211   1        LCD12864_display_string(0,2,"    录入指纹    ");
 212   1        LCD12864_display_string(0,3,"    删除指纹    ");
 213   1        LCD12864_display_string(0,4,"    修改密码    ");
 214   1        switch(mode_num)    
 215   1        {
 216   2           case 0: LCD12864_display_string(0,2," >> "); break;
 217   2           case 1: LCD12864_display_string(0,3," >> "); break;
 218   2           case 2: LCD12864_display_string(0,4," >> "); break;
 219   2           default: break;
 220   2        }
 221   1      }
 222          /*********************************************************
 223          函数void chuli()
 224          对所按下的按键进行处理
 225          *********************************************************/
 226          void chuli()
 227          {
 228   1        if(key_f==1)      //先判断是否有按键按下
 229   1        { 
 230   2          if((mode==2||mode==3)&&a<10)//如果输入ID状态，并且按下的是数字键
 231   2          {
 232   3            if(n<ID_MAX)//判断是否为输入状态，并且输入未满最大整数位数，才可以继续输入
 233   3            {
 234   4              if(n==0)//判断为编号第1位       
 235   4              { 
 236   5                LCD12864_display_string(3,2,"        ");
 237   5                LCD12864_display_string(0,3,"              ");        
 238   5              } 
 239   4              LCD12864_display_char(3+n,2,a+0x30);//显示出输入的数字  ASCII[a]
 240   4      
 241   4              ID=ID*10+a;//编号计算   
C51 COMPILER V9.59.0.0   MAIN                                                              03/19/2021 15:06:53 PAGE 5   

 242   4              n++;     //编号输入位数+1
 243   4            }                     
 244   3          }
 245   2      
 246   2          if((mode==0||mode==4)&&input_f==0&&a<10)//如果在in_f=1（输入密码状态），并且按下的是数字键
 247   2          {     
 248   3            if(in_f==1||mode==4)
 249   3            { 
 250   4              if(num==0)                      //清除显示后、显示输入新密码
 251   4                LCD12864_display_string(1,3,"           "); 
 252   4              if(reset_f==1&&reset_num>1)   //在重置密码时候输入新密码阶段
 253   4                  LCD12864_display_char(num+1,2,a+0x30);//显示输入的数字
 254   4              else              //其它情况下输入密码显示*
 255   4                LCD12864_display_char(num+1,2,'*');   //显示“*”
 256   4            }
 257   3            else
 258   3              LCD12864_display_char(num+1,4,'*');//显示“*”
 259   3            in_mima=in_mima*10+a;//读入密码 
 260   3            num++;           //密码输入次数加一     
 261   3            if(num==6)         //六位密码输入完成                                             
 262   3              input_f=1;       //标记六位密码输入完成             
 263   3          }
 264   2      
 265   2          if(a==10)        //进入管理界面
 266   2          {
 267   3            if(mode==0&&in_f==0) //输入密码
 268   3            {
 269   4              num=0;       //清0 输入密码位数
 270   4              in_f=1;      //标记输入密码
 271   4              in_mima=0;     //清0 输入的密码
 272   4              input_f=0;       //清除密码输入完成标志
 273   4              write_com(0x01); //清除显示
 274   4              LCD12864_display_string(0,1,"请输入管理密码: ");//显示输入密码
 275   4            }
 276   3          }
 277   2          if(a==15)                //返回上一级菜单
 278   2          {
 279   3            if(mode>1)       //在管理操作中
 280   3            {  
 281   4              reset_f=0;
 282   4              reset_num=0;
 283   4              write_com(0x01); //清除显示
 284   4              mode=1;        //回到管理选择界面
 285   4            }
 286   3            else         //非管理界面
 287   3            {
 288   4              if(mode!=0||in_f==1)//如果在输入密码阶段
 289   4              {
 290   5                write_com(0x01);//清除显示
 291   5                mode=0;
 292   5                diaplay_mode0();//显示主界面
 293   5                in_f=0;
 294   5                num=0;
 295   5                input_f=0;    //清除密码输入完成标志
 296   5              }
 297   4            }
 298   3            
 299   3            if(jdq==0)        //如果电磁锁打开，按下该按键，手动关门
 300   3            {
 301   4              jdq=1;        //关闭继电器
 302   4              T2_num=0;     //清除计时
 303   4              TR2=0;        //关闭定时器
C51 COMPILER V9.59.0.0   MAIN                                                              03/19/2021 15:06:53 PAGE 6   

 304   4            }        
 305   3          }
 306   2              
 307   2          if(a==11)      //选择上一项
 308   2          {
 309   3            if(mode==1)//选择上一项管理    
 310   3            {
 311   4              if(mode_num==0)
 312   4                mode_num=2; 
 313   4              else
 314   4                mode_num--; 
 315   4            }
 316   3          }
 317   2          if(a==12)      //选择下一项
 318   2          {
 319   3            if(mode==1)//选择下一项管理
 320   3            {
 321   4              if(mode_num>=2)
 322   4                mode_num=0; 
 323   4              else
 324   4                mode_num++;   
 325   4            } 
 326   3          }
 327   2          if(a==13)      //退格
 328   2          {                    
 329   3             if(mode==0||mode==4)//在输入密码状态
 330   3             {
 331   4              if(num!=0)     //当前已经有输入了  
 332   4              {      
 333   5                num--;       //输入密码个数减1
 334   5                if(in_f==1||mode==4)
 335   5                  LCD12864_display_char(num+1,2,' '); 
 336   5                else
 337   5                  LCD12864_display_char(num+1,4,' '); 
 338   5              
 339   5                in_mima=in_mima/10;   
 340   5                input_f=0;
 341   5              }
 342   4             }
 343   3             if(mode==2||mode==3)//在ID编号输入状态
 344   3             {
 345   4              if(n!=0)     //当前已经有输入了
 346   4              {
 347   5                LCD12864_display_char(2+n,2,' ');
 348   5                n--;
 349   5                ID=ID/10;
 350   5                zhiwen_f=0;
 351   5              }
 352   4             }
 353   3          }
 354   2      
 355   2          if(a==14)//确定
 356   2          {
 357   3            if(mode==1)       //确定选择管理操作
 358   3            { 
 359   4              write_com(0x01);//清除显示
 360   4              mode=mode_num+2;
 361   4              n=0;
 362   4              ID=0;
 363   4              zhiwen_f=0; 
 364   4              input_f=0;   //清除确定标志
 365   4              num=0;
C51 COMPILER V9.59.0.0   MAIN                                                              03/19/2021 15:06:53 PAGE 7   

 366   4              in_mima=0;
 367   4              new_mima=0;
 368   4              switch(mode_num)    
 369   4              {
 370   5                 case 0:    
 371   5                      LCD12864_display_string(0,1,">>  录入指纹");
 372   5                      LCD12864_display_string(0,2,"编号: ");
 373   5                      break;
 374   5                 case 1:    
 375   5                      LCD12864_display_string(0,1,">>  删除指纹");
 376   5                      LCD12864_display_string(0,2,"编号: ");
 377   5                      break;
 378   5                 case 2:    
 379   5                      reset_f=1;
 380   5                      reset_num=1;
 381   5                      LCD12864_display_string(0,1,"请输入旧密码: "); 
 382   5                      break;   
 383   5                 default: break;
 384   5              } 
 385   4            }
 386   3            else 
 387   3            {
 388   4              if(input_f==1)     //密码输入完成确定
 389   4              {
 390   5                if(reset_f==1) //修改密码区间
 391   5                {
 392   6                  if(reset_num==3)//再次输入新密码
 393   6                  { 
 394   7                    if(new_mima==in_mima)//两次输入的新密码一致
 395   7                    { 
 396   8                      low_mima=new_mima;     
 397   8                      AT24C02_write_date(200,low_mima/10000);    //存储密码
 398   8                      AT24C02_write_date(201,low_mima%10000/100);
 399   8                      AT24C02_write_date(202,low_mima%100);
 400   8                      write_com(0x01);
 401   8                      LCD12864_display_string(1,1,"密码修改成功");
 402   8                      LCD12864_display_string(1,3,"请妥善保管好");
 403   8                    }
 404   7                    else
 405   7                    {
 406   8                      LCD12864_display_string(1,3,"密码修改失败");
 407   8                    }
 408   7                    reset_num=0;
 409   7                    reset_f=0;  
 410   7                  } 
 411   6                  if(reset_num==2)//输入新密码
 412   6                  { 
 413   7                    write_com(0x01);
 414   7                    LCD12864_display_string(0,1,"请再次输入新密码");    
 415   7                    new_mima=in_mima;
 416   7                    reset_num++;  
 417   7                  } 
 418   6                  if(reset_num==1)//输入旧密码
 419   6                  {
 420   7                    if(low_mima==in_mima)//输入的密码和旧密码一致
 421   7                    { 
 422   8                      write_com(0x01);
 423   8                      reset_num++;
 424   8                      LCD12864_display_string(0,1,"请输入新密码: ");//显示输入新密码
 425   8                    }
 426   7                    else
 427   7                    {
C51 COMPILER V9.59.0.0   MAIN                                                              03/19/2021 15:06:53 PAGE 8   

 428   8                      LCD12864_display_string(2,3,"密码错误");  //显示密码错误
 429   8                      reset_num=1;
 430   8                      LCD12864_display_string(1,2,"            ");  
 431   8                    }
 432   7                  }
 433   6                }
 434   5                if(in_f==1)      //进入管理输入密码时候
 435   5                {
 436   6                  if(low_mima==in_mima)//输入的密码正确
 437   6                  {           
 438   7                    mode=1;    //标记进入管理界面
 439   7                    write_com(0x01);
 440   7                    in_f=0;
 441   7                  }
 442   6                  else
 443   6                  {
 444   7                    LCD12864_display_string(2,3,"密码错误");  //显示密码错误
 445   7                    LCD12864_display_string(1,2,"            ");  
 446   7                  }
 447   6                } 
 448   5      
 449   5                if(mode==0&&in_f==0)   //密码解锁
 450   5                {
 451   6                  if(low_mima==in_mima)//输入的密码正确
 452   6                  {         
 453   7                    LCD12864_display_string(3,3,"解锁成功");
 454   7                    jdq=0;       //继电器吸合，电磁锁打开
 455   7                    T2_num=0;    //清0 计数
 456   7                    TR2=1;       //开启定时器2
 457   7                  }
 458   6                  else
 459   6                  {
 460   7                    LCD12864_display_string(3,3,"密码错误");  //显示密码错误
 461   7                    didi(3);
 462   7                  }
 463   6      
 464   6                  LCD12864_display_string(1,4,"            ");
 465   6                  delay1ms(500);
 466   6                  LCD12864_display_string(3,3,"        ");  
 467   6                }
 468   5                in_mima=0;
 469   5                num=0;    //清除密码计数。重新计算输入的密码个数
 470   5                input_f=0;  //清除确定标志
 471   5              }
 472   4      
 473   4              if((mode==2||mode==3)&&n==ID_MAX)//注册或删除指纹时编号输入完成后开启指纹检测
 474   4              {
 475   5                zhiwen_f=1; //标记进入指纹采集  
 476   5              }
 477   4            }     
 478   3          }           
 479   2          key_f=0;        //清除按键标志  
 480   2        }
 481   1      }
 482          /*********************************************************
 483          函数void main()
 484          主函数
 485          *********************************************************/
 486          void main()
 487          {
 488   1        uchar i;
 489   1      
C51 COMPILER V9.59.0.0   MAIN                                                              03/19/2021 15:06:53 PAGE 9   

 490   1        LCD12864_init();     //初始化LCD12864 
 491   1        UartInit();        //串口初始化
 492   1        T2_init();         //定时器2初始化
 493   1        low_mima=AT24C02_read_date(200);       //读取存储在AT24C02的密码
 494   1        low_mima=low_mima*100+AT24C02_read_date(201);
 495   1        low_mima=low_mima*100+AT24C02_read_date(202);
 496   1      
 497   1        diaplay_mode0();       //显示初始界面
 498   1        while(1)
 499   1        {
 500   2          i++;
 501   2          a=keycan();      //矩阵键盘检测
 502   2          chuli();       //矩阵键盘处理
 503   2          
 504   2          if(mode==1)
 505   2            display_guanli();     //显示管理界面
 506   2          else
 507   2            if(mode==2)         //录入指纹
 508   2            {
 509   3              if(zhiwen_f==1)
 510   3                cunchu();     //录入指纹
 511   3            }
 512   2            else
 513   2              if(mode==3)       //注销指纹
 514   2              {
 515   3                if(zhiwen_f==1)
 516   3                  shanchu();    //注销指纹    
 517   3              }
 518   2              else        
 519   2                if(mode==0&&in_f==0)//正常解锁界面
 520   2                {
 521   3                  if(i>=150)
 522   3                  {
 523   4                    i=0;
 524   4                    xunzhiwen();//指纹解锁
 525   4                  }
 526   3                }
 527   2        }
 528   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   3561    ----
   CONSTANT SIZE    =    535    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     95      20
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      5       3
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
